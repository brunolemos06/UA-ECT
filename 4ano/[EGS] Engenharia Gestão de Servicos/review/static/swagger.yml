openapi: 3.0.3
info:
  title: Swagger Review - OpenAPI 3.0
  description: |-
    Welcome to our description review service, where we provide expert feedback and editing for all types of written content. Our team of skilled writers and editors can help you improve the quality and effectiveness of your website copy, marketing materials, academic papers, and more.
    We understand the importance of clear, concise, and engaging writing in today's fast-paced digital world, and we are committed to helping our clients achieve their communication goals. Whether you need help with grammar, punctuation, tone, or structure, we can provide personalized feedback and guidance to help you enhance your writing skills.
    Our process is simple and efficient. You can submit your document to us through our online platform, and we will assign a qualified editor to review your work. The editor will provide a detailed critique, highlighting areas that need improvement and offering suggestions for how to enhance your writing. You will then have the opportunity to revise your document based on the feedback you received.
    At our description review service, we pride ourselves on our attention to detail, responsiveness, and commitment to excellence. We work closely with our clients to ensure that their writing is clear, concise, and effective, and we are dedicated to helping them achieve their goals. So whether you are a student, a professional, or an entrepreneur, we are here to help you elevate your writing and communicate more effectively with your audience.
  termsOfService: http://swagger.io/terms/
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://127.0.0.1:5005/api/v1
    description: Local server
tags:
  - name: review
    description: View all reviews that are available
paths:
  /reviews:
    get:
      tags:
        - review
      summary: Info about all reviews
      description: Get all information about all reviews that are available
      parameters:
        - name: reviewid
          in: query
          description: ID of review to return
          required: false
          schema:
            type: integer
        - name: personid
          in: query
          description: ID of review to return
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
            application/xml:
              schema:
                $ref: '#/components/schemas/Review'
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: Invalid ID supplied
        '404':
          description: Review not found
        '405':
          description: Validation exception
    post:
      tags:
        - review
      summary: Add new review
      description: Addic a new review to the database
      operationId: addReview
      requestBody:
        description: Create a new review
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateReview'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
            application/xml:
              schema:
                $ref: '#/components/schemas/Review'
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: Invalid ID supplied
        '404':
          description: Review not found
        '405':
          description: Validation exception
    put:
      tags:
        - review
      summary: Update a review
      description: Update a review in the database
      operationId: updateReview
      requestBody:
        description: Update a review
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateReview'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
            application/xml:
              schema:
                $ref: '#/components/schemas/Review'
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: Invalid ID supplied
        '404':
          description: Review not found
        '405':
          description: Validation exception
    delete:
      tags:
        - review
      summary: Delete a review
      description: Delete a review in the database
      operationId: deleteReview
      parameters:
        - name: reviewid
          in: query
          description: ID of review to return
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
            application/xml:
              schema:
                $ref: '#/components/schemas/Review'
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: Invalid ID supplied
        '404':
          description: Review not found
        '405':
          description: Validation exception

  /reviews/rating:
    get:
      tags:
        - review
      summary: Info about all reviews
      description: Get all information about all reviews that are available
      parameters:
        - name: personid
          in: query
          description: ID of review to return
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
            application/xml:
              schema:
                $ref: '#/components/schemas/Rating'
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/Rating'
        '400':
          description: Invalid ID supplied
        '404':
          description: Review not found
        '405':
          description: Validation exception

components:
  schemas:
    Review:
      type: object
      properties:
        reviewid:
          type: integer
          example: 117
          autoIncrement: true
        title:
          type: string
          example: 'Great Product'
        description:
          type: string
          example: 'This product is great. I love it.'
        rating:
          type: integer
          example: 5
        generated:
          type: date
          dateFormat: 'YYYY-MM-DDTHH:mm:ss.SSSZ'
          example: '2018-01-01T00:00:00.000Z'
          auto createdAt: true
        personid:
          type: integer
          example: 98221
      xml:
        name: order
    CreateReview:
      type: object
      properties:
        title:
          type: string
          example: 'Great Product'
        description:
          type: string
          example: 'This product is great. I love it.'
        rating:
          type: integer
          example: 5
        personid:
          type: integer
          example: 98221
      xml:
        name: order
    Rating:
      type: object
      properties:
        rating:
          type: integer
          example: 5
        personid:
          type: integer
          example: 98221
      xml:
        name: order
    UpdateReview:
      type: object
      properties:
        title:
          type: string
          example: 'Great Product'
        description:
          type: string
          example: 'This product is great. I love it.'
        rating:
          type: integer
          example: 5
        personid:
          type: integer
          example: 98221
        reviewid:
          type: integer
          example: 117
      xml:
        name: order